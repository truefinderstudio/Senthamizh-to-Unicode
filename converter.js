// converter.js
function unicodeToNCR(input) {
    var output = '';
    for (var i = 0; i < input.length; i++) {
        output += '&#' + input.charCodeAt(i) + ';';
    }
    return output;
}

function NCRToUnicode(input) {
    return input.replace(/&#(\d+);/g, function(match, numStr) {
        return String.fromCharCode(parseInt(numStr, 10));
    });
}

function convertText(input) {
    // Define your find and replace arrays
    var find = ["&#250;", "&#201;", "&#201;", "&#193;", "&#123;", "&#206;", "&#110;", "&#176;", "&#168;", "&#187;", "&#99;", "&#126;", "&#214;", "&#103;", "&#182;", "&#216;&#239;&#225;", "&#188;&#239;&#86;", "&#216;&#239;&#86;", "&#231;&#239;", "&#188;&#239;", "&#216;&#239;", "&#237;", "&#122;", "&#255;", "&#254;", "&#239;&#86;", "&#194;", "&#239;", "&#216;&#244;&#225;", "&#188;&#244;&#86;", "&#216;&#244;&#86;", "&#231;&#244;", "&#188;&#244;", "&#216;&#244;", "&#244;&#3010;", "&#244;&#3009;", "&#244;&#3008;", "&#244;&#3007;", "&#244;&#86;", "&#186;", "&#244;", "&#216;&#196;&#225;", "&#188;&#196;&#86;", "&#216;&#196;&#86;", "&#231;&#196;", "&#188;&#196;", "&#216;&#196;", "&#243;", "&#183;", "&#230;", "&#69;", "&#196;&#86;", "&#223;", "&#196;", "&#216;&#81;&#225;", "&#188;&#81;&#86;", "&#216;&#81;&#86;", "&#231;&#81;", "&#188;&#81;", "&#216;&#81;", "&#81;&#3010;", "&#81;&#3009;", "&#81;&#3008;", "&#81;&#3007;", "&#81;&#86;", "&#222;", "&#81;", "&#216;&#166;&#225;", "&#188;&#166;&#86;", "&#216;&#166;&#86;", "&#231;&#166;", "&#188;&#166;", "&#216;&#166;", "&#249;", "&#124;", "&#207;", "&#189;", "&#166;&#86;", "&#226;", "&#166;", "&#216;&#240;&#225;", "&#188;&#240;&#86;", "&#216;&#240;&#86;", "&#231;&#240;", "&#188;&#240;", "&#216;&#240;", "&#73;", "&#98;", "&#167;", "&#232;", "&#240;&#86;", "&#245;", "&#240;", "&#216;&#62;&#225;", "&#188;&#62;&#86;", "&#216;&#62;&#86;", "&#231;&#62;", "&#188;&#62;", "&#216;&#62;", "&#35;", "&#109;", "&#121;", "&#93;", "&#62;&#86;", "&#221;", "&#62;", "&#216;&#229;&#225;", "&#188;&#229;&#86;", "&#216;&#229;&#86;", "&#231;&#229;", "&#188;&#229;", "&#216;&#229;", "&#177;", "&#79;", "&#192;", "&#87;", "&#229;&#86;", "&#205;", "&#229;", "&#216;&#195;&#225;", "&#188;&#195;&#86;", "&#216;&#195;&#86;", "&#231;&#195;", "&#188;&#195;", "&#216;&#195;", "&#175;", "&#65;", "&#172;", "&#184;", "&#195;&#86;", "&#169;", "&#195;", "&#216;&#92;&#225;", "&#188;&#92;&#86;", "&#216;&#92;&#86;", "&#231;&#92;", "&#188;&#92;", "&#216;&#92;", "&#74;", "&#120;", "&#42;", "&#116;", "&#92;&#86;", "&#68;", "&#92;", "&#216;&#66;&#225;", "&#188;&#66;&#86;", "&#216;&#66;&#86;", "&#231;&#66;", "&#188;&#66;", "&#216;&#66;", "&#82;", "&#165;", "&#88;", "&#108;", "&#66;&#86;", "&#70;", "&#66;", "&#216;&#171;&#225;", "&#188;&#171;&#86;", "&#216;&#171;&#86;", "&#231;&#171;", "&#188;&#171;", "&#216;&#171;", "&#212;", "&#242;", "&#90;", "&#246;", "&#171;&#86;", "&#236;", "&#171;", "&#216;&#233;&#225;", "&#188;&#233;&#86;", "&#216;&#233;&#86;", "&#231;&#233;", "&#188;&#233;", "&#216;&#233;", "&#217;", "&#75;", "&#220;", "&#111;", "&#233;&#86;", "&#95;", "&#233;", "&#216;&#107;&#225;", "&#188;&#107;&#86;", "&#216;&#107;&#86;", "&#231;&#107;", "&#188;&#107;", "&#216;&#107;", "&#198;", "&#161;", "&#84;", "&#115;", "&#107;&#86;", "&#203;", "&#107;", "&#216;&#119;&#225;", "&#188;&#119;&#86;", "&#216;&#119;&#86;", "&#231;&#119;", "&#188;&#119;", "&#216;&#119;", "&#241;", "&#191;", "&#209;", "&#97;", "&#119;&#86;", "&#181;", "&#119;", "&#216;&#101;&#225;", "&#188;&#101;&#86;", "&#216;&#101;&#86;", "&#231;&#101;", "&#188;&#101;", "&#216;&#101;", "&#106;", "&#211;", "&#67;", "&#185;", "&#101;&#86;", "&#94;", "&#101;", "&#216;&#197;&#225;", "&#188;&#197;&#86;", "&#216;&#197;&#86;", "&#231;&#197;", "&#188;&#197;", "&#216;&#197;", "&#71;", "&#174;", "&#83;", "&#164;", "&#197;&#86;", "&#117;", "&#197;", "&#216;&#170;&#225;", "&#188;&#170;&#86;", "&#216;&#170;&#86;", "&#231;&#170;", "&#188;&#170;", "&#216;&#170;", "&#251;", "&#208;", "&#204;", "&#77;", "&#170;&#86;", "&#91;", "&#170;", "&#216;&#173;&#225;", "&#188;&#173;&#86;", "&#216;&#173;&#86;", "&#231;&#173;", "&#188;&#173;", "&#216;&#173;", "&#163;", "&#215;", "&#85;", "&#180;", "&#173;&#86;", "&#105;", "&#173;", "&#216;&#219;&#225;", "&#188;&#219;&#86;", "&#216;&#219;&#86;", "&#231;&#219;", "&#188;&#219;", "&#216;&#219;", "&#201;", "&#104;", "&#253;", "&#247;", "&#219;&#86;", "&#235;", "&#219;", "&#216;&#173;&#225;", "&#188;&#173;&#86;", "&#216;&#173;&#86;", "&#231;&#173;", "&#188;&#173;", "&#216;&#173;", "&#163;", "&#215;", "&#85;", "&#180;", "&#173;&#86;", "&#105;", "&#173;", "&#216;&#118;&#225;", "&#188;&#118;&#86;", "&#216;&#118;&#86;", "&#231;&#118;", "&#188;&#118;", "&#216;&#118;", "&#96;", "&#113;", "&#162;", "&#76;", "&#118;&#86;", "&#252;", "&#118;", "&#216;&#199;&#225;", "&#188;&#199;&#86;", "&#216;&#199;&#86;", "&#231;&#199;", "&#188;&#199;", "&#216;&#199;", "&#218;", "&#248;", "&#234;", "&#78;", "&#199;&#86;", "&#227;", "&#199;", "&#216;&#179;&#225;", "&#188;&#179;&#86;", "&#216;&#179;&#86;", "&#231;&#179;", "&#188;&#179;", "&#216;&#179;", "&#102;", "&#89;", "&#200;", "&#72;", "&#179;&#86;", "&#213;", "&#179;", "&#224;&#219;", "&#224;&#239;", "&#224;&#195;", "&#224;&#107;", "&#224;&#173;", "&#224;&#118;", "&#224;&#199;", "&#224;&#62;", "&#77;&#77;", "&#77;", "&#249;&#249;", "&#249;", "&#38;"]; // Placeholder: Fill with actual patterns
    var replace = ["&#2992;&#3021;", "&#2972;&#3010;", "&#2972;&#3010;", "&#2964;", "&#2963;", "&#2962;", "&#2960;", "&#2959;", "&#2958;", "&#2954;", "&#2953;", "&#2952;", "&#2951;", "&#2950;", "&#2949;", "&#2965;&#3020;", "&#2965;&#3019;", "&#2965;&#3018;", "&#2965;&#3016;", "&#2965;&#3015;", "&#2965;&#3014;", "&#2965;&#3010;", "&#2965;&#3009;", "&#2965;&#3008;", "&#2965;&#3007;", "&#2965;&#3006;", "&#2965;&#3021;", "&#2965;", "&#2969;&#3020;", "&#2969;&#3019;", "&#2969;&#3018;", "&#2969;&#3016;", "&#2969;&#3015;", "&#2969;&#3014;", "&#2969;&#3010;", "&#2969;&#3009;", "&#2969;&#3008;", "&#2969;&#3007;", "&#2969;&#3006;", "&#2969;&#3021;", "&#2969;", "&#2970;&#3020;", "&#2970;&#3019;", "&#2970;&#3018;", "&#2970;&#3016;", "&#2970;&#3015;", "&#2970;&#3014;", "&#2970;&#3010;", "&#2970;&#3009;", "&#2970;&#3008;", "&#2970;&#3007;", "&#2970;&#3006;", "&#2970;&#3021;", "&#2970;", "&#2974;&#3020;", "&#2974;&#3019;", "&#2974;&#3018;", "&#2974;&#3016;", "&#2974;&#3015;", "&#2974;&#3014;", "&#2974;&#3010;", "&#2974;&#3009;", "&#2974;&#3008;", "&#2974;&#3007;", "&#2974;&#3006;", "&#2974;&#3021;", "&#2974;", "&#2975;&#3020;", "&#2975;&#3019;", "&#2975;&#3018;", "&#2975;&#3016;", "&#2975;&#3015;", "&#2975;&#3014;", "&#2975;&#3010;", "&#2975;&#3009;", "&#2975;&#3008;", "&#2975;&#3007;", "&#2975;&#3006;", "&#2975;&#3021;", "&#2975;", "&#2979;&#3020;", "&#2979;&#3019;", "&#2979;&#3018;", "&#2979;&#3016;", "&#2979;&#3015;", "&#2979;&#3014;", "&#2979;&#3010;", "&#2979;&#3009;", "&#2979;&#3008;", "&#2979;&#3007;", "&#2979;&#3006;", "&#2979;&#3021;", "&#2979;", "&#2980;&#3020;", "&#2980;&#3019;", "&#2980;&#3018;", "&#2980;&#3016;", "&#2980;&#3015;", "&#2980;&#3014;", "&#2980;&#3010;", "&#2980;&#3009;", "&#2980;&#3008;", "&#2980;&#3007;", "&#2980;&#3006;", "&#2980;&#3021;", "&#2980;", "&#2984;&#3020;", "&#2984;&#3019;", "&#2984;&#3018;", "&#2984;&#3016;", "&#2984;&#3015;", "&#2984;&#3014;", "&#2984;&#3010;", "&#2984;&#3009;", "&#2984;&#3008;", "&#2984;&#3007;", "&#2984;&#3006;", "&#2984;&#3021;", "&#2984;", "&#2986;&#3020;", "&#2986;&#3019;", "&#2986;&#3018;", "&#2986;&#3016;", "&#2986;&#3015;", "&#2986;&#3014;", "&#2986;&#3010;", "&#2986;&#3009;", "&#2986;&#3008;", "&#2986;&#3007;", "&#2986;&#3006;", "&#2986;&#3021;", "&#2986;", "&#2990;&#3020;", "&#2990;&#3019;", "&#2990;&#3018;", "&#2990;&#3016;", "&#2990;&#3015;", "&#2990;&#3014;", "&#2990;&#3010;", "&#2990;&#3009;", "&#2990;&#3008;", "&#2990;&#3007;", "&#2990;&#3006;", "&#2990;&#3021;", "&#2990;", "&#2991;&#3020;", "&#2991;&#3019;", "&#2991;&#3018;", "&#2991;&#3016;", "&#2991;&#3015;", "&#2991;&#3014;", "&#2991;&#3010;", "&#2991;&#3009;", "&#2991;&#3008;", "&#2991;&#3007;", "&#2991;&#3006;", "&#2991;&#3021;", "&#2991;", "&#2992;&#3020;", "&#2992;&#3019;", "&#2992;&#3018;", "&#2992;&#3016;", "&#2992;&#3015;", "&#2992;&#3014;", "&#2992;&#3010;", "&#2992;&#3009;", "&#2992;&#3008;", "&#2992;&#3007;", "&#2992;&#3006;", "&#2992;&#3021;", "&#2992;", "&#2994;&#3020;", "&#2994;&#3019;", "&#2994;&#3018;", "&#2994;&#3016;", "&#2994;&#3015;", "&#2994;&#3014;", "&#2994;&#3010;", "&#2994;&#3009;", "&#2994;&#3008;", "&#2994;&#3007;", "&#2994;&#3006;", "&#2994;&#3021;", "&#2994;", "&#2997;&#3020;", "&#2997;&#3019;", "&#2997;&#3018;", "&#2997;&#3016;", "&#2997;&#3015;", "&#2997;&#3014;", "&#2997;&#3010;", "&#2997;&#3009;", "&#2997;&#3008;", "&#2997;&#3007;", "&#2997;&#3006;", "&#2997;&#3021;", "&#2997;", "&#2996;&#3020;", "&#2996;&#3019;", "&#2996;&#3018;", "&#2996;&#3016;", "&#2996;&#3015;", "&#2996;&#3014;", "&#2996;&#3010;", "&#2996;&#3009;", "&#2996;&#3008;", "&#2996;&#3007;", "&#2996;&#3006;", "&#2996;&#3021;", "&#2996;", "&#2995;&#3020;", "&#2995;&#3019;", "&#2995;&#3018;", "&#2995;&#3016;", "&#2995;&#3015;", "&#2995;&#3014;", "&#2995;&#3010;", "&#2995;&#3009;", "&#2995;&#3008;", "&#2995;&#3007;", "&#2995;&#3006;", "&#2995;&#3021;", "&#2995;", "&#2993;&#3020;", "&#2993;&#3019;", "&#2993;&#3018;", "&#2993;&#3016;", "&#2993;&#3015;", "&#2993;&#3014;", "&#2993;&#3010;", "&#2993;&#3009;", "&#2993;&#3008;", "&#2993;&#3007;", "&#2993;&#3006;", "&#2993;&#3021;", "&#2993;", "&#2985;&#3020;", "&#2985;&#3019;", "&#2985;&#3018;", "&#2985;&#3016;", "&#2985;&#3015;", "&#2985;&#3014;", "&#2985;&#3010;", "&#2985;&#3009;", "&#2985;&#3008;", "&#2985;&#3007;", "&#2985;&#3006;", "&#2985;&#3021;", "&#2985;", "&#2998;&#3020;", "&#2998;&#3019;", "&#2998;&#3018;", "&#2998;&#3016;", "&#2998;&#3015;", "&#2998;&#3014;", "&#2998;&#3010;", "&#2998;&#3009;", "&#2998;&#3008;", "&#2998;&#3007;", "&#2998;&#3006;", "&#2998;&#3021;", "&#2998;", "&#2972;&#3020;", "&#2972;&#3019;", "&#2972;&#3018;", "&#2972;&#3016;", "&#2972;&#3015;", "&#2972;&#3014;", "&#2972;&#3010;", "&#2972;&#3009;", "&#2972;&#3008;", "&#2972;&#3007;", "&#2972;&#3006;", "&#2972;&#3021;", "&#2972;", "&#2999;&#3020;", "&#2999;&#3019;", "&#2999;&#3018;", "&#2999;&#3016;", "&#2999;&#3015;", "&#2999;&#3014;", "&#2999;&#3010;", "&#2999;&#3009;", "&#2999;&#3008;", "&#2999;&#3007;", "&#2999;&#3006;", "&#2999;&#3021;", "&#2999;", "&#3000;&#3020;", "&#3000;&#3019;", "&#3000;&#3018;", "&#3000;&#3016;", "&#3000;&#3015;", "&#3000;&#3014;", "&#3000;&#3010;", "&#3000;&#3009;", "&#3000;&#3008;", "&#3000;&#3007;", "&#3000;&#3006;", "&#3000;&#3021;", "&#3000;", "&#3001;&#3020;", "&#3001;&#3019;", "&#3001;&#3018;", "&#3001;&#3016;", "&#3001;&#3015;", "&#3001;&#3014;", "&#3001;&#3010;", "&#3001;&#3009;", "&#3001;&#3008;", "&#3001;&#3007;", "&#3001;&#3006;", "&#3001;&#3021;", "&#3001;", "&#2965;&#3021;&#2999;&#3020;", "&#34;&#2965;&#3021;&#2999;&#3019;&#9;&#34;", "&#2965;&#3021;&#2999;&#3018;", "&#34;&#2965;&#3021;&#2999;&#3016;&#9;&#34;", "&#34;&#2965;&#3021;&#2999;&#3015;&#9;&#34;", "&#2965;&#3021;&#2999;&#3014;", "&#2965;&#3021;&#2999;&#3010;", "&#34;&#2965;&#3021;&#2999;&#3009;&#9;&#34;", "&#2965;&#3021;&#2999;&#3008;", "&#2965;&#3021;&#2999;&#3007;", "&#2965;&#3021;&#2999;&#3006;", "&#2965;&#3021;&#2999;&#3021;", "&#34;&#9;&#2965;&#3021;&#2999;&#9;&#34;", "&#2947;&#2972;", "&#2947;&#2965;", "&#2947;&#2986;", "&#2947;&#2997;", "&#2947;&#2999;", "&#2947;&#3000;", "&#2947;&#3001;", "&#2947;&#2980;", "&#34;", "&#39;", "&#34;", "&#39;", "&#45;"]; // Placeholder: Fill with actual replacements
    for (var i = 0; i < find.length; i++) {
        var regex = new RegExp(find[i], "g");
        input = input.replace(regex, replace[i]);
    }
    return input;
}
